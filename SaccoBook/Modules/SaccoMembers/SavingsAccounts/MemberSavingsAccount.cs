using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraBars;
using Newtonsoft.Json.Linq;
using DevExpress.XtraEditors;
using DevExpress.XtraSplashScreen;
using Newtonsoft.Json;

namespace SaccoBook.Modules.SaccoMembers.SavingsAccounts
{
    public partial class MemberSavingsAccount : DevExpress.XtraBars.Ribbon.RibbonForm
    {
        static bool _Edit = false;
        static string AccountNumber = null;
        public MemberSavingsAccount()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill a SqlDataSource
            sqlDataSource1.Fill();
        }
        public MemberSavingsAccount(string MembershipNumber)
        {
            InitializeComponent();
            EF.SavingsQueries.LoadSavingAccountTypes(AccountsTypeSearchLookUp);
            AccountsTypeSearchLookUp.Properties.DisplayMember = "Name";
            AccountsTypeSearchLookUp.Properties.ValueMember = "Code";
            LoadMemberInformation(MembershipNumber);
        }
        public MemberSavingsAccount(string MembershipNumber, string _AccountNumber, bool edit)
        {
            InitializeComponent();
            //set form fields uneditable

            _MemberAccountNumber.ReadOnly = edit;
            AccountsTypeSearchLookUp.ReadOnly = edit;
            _OpeningBalance.ReadOnly = edit;
            _DateCreated.ReadOnly = edit;

            _Edit = edit;
            AccountNumber = _AccountNumber;
            LoadMemberInformation(MembershipNumber);
            LoadAccountInformation(AccountNumber);
        }
        private void LoadMemberInformation(string MembershipNumber)
        {
            SplashScreenManager.ShowForm(this, typeof(AppWaitForm), true, true, false);
            SplashScreenManager.Default.SetWaitFormCaption("Please wait");
            SplashScreenManager.Default.SetWaitFormDescription("Loading...");

            string GetMemberInfoJSON = EF.MemberQueries.GetMemberInfo(MembershipNumber);
            Member jsonGetMemberInfo = JsonConvert.DeserializeObject<Member>(GetMemberInfoJSON);

            _MembershipNumber.Text = MembershipNumber;
            _Name.Text = jsonGetMemberInfo.Name;           
            _NationalIdNumber.Text = jsonGetMemberInfo.NationalIdNumber;
            _DateJoined.Text = jsonGetMemberInfo.DateJoined.ToString();
            _MembershipStatus.Text = jsonGetMemberInfo.MembershipStatus;

            SplashScreenManager.CloseForm();
        }
        private void LoadAccountInformation(string AccountNumber)
        {
            string MemberSavingsAccountInfoJSON = EF.SavingsQueries.GetMemberSavingsAccountInfo(AccountNumber);
            dynamic jsonMemberSavingsAccountInfoJSON = JObject.Parse(MemberSavingsAccountInfoJSON);

            _MemberAccountNumber.Text = jsonMemberSavingsAccountInfoJSON.AccountNumber;
            AccountsTypeSearchLookUp.EditValue = jsonMemberSavingsAccountInfoJSON.AccountName;
            _OpeningBalance.Text = jsonMemberSavingsAccountInfoJSON.Balance;
            _DateCreated.Text = jsonMemberSavingsAccountInfoJSON.DateCreated;
            _AccountStatus.Text = jsonMemberSavingsAccountInfoJSON.Status;
            this.Text = jsonMemberSavingsAccountInfoJSON.AccountName;
        }

        private void btn_save_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (dxValidationProviderMemberSavingsAccount.Validate().Equals(true))
            {
                string OpeningBalance = _OpeningBalance.Text.Replace(",", "");

                if (_Edit == true)
                {
                    if (EF.SavingsQueries.CreateMemberSavingsAccount(_MemberAccountNumber.Text, AccountsTypeSearchLookUp.EditValue.ToString(), AccountsTypeSearchLookUp.Text, _MembershipNumber.Text, OpeningBalance, "0.00", OpeningBalance, _DateCreated.Text, _AccountStatus.Text, Login.LoggedInUser, DateTime.Now.ToString()))
                    {
                        XtraMessageBox.Show("Information has been successfully saved", "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                }
                else
                {
                    if (EF.SavingsQueries.CreateMemberSavingsAccount(_MemberAccountNumber.Text, AccountsTypeSearchLookUp.EditValue.ToString(), AccountsTypeSearchLookUp.Text, _MembershipNumber.Text, OpeningBalance, "0.00", OpeningBalance, _DateCreated.Text, _AccountStatus.Text, Login.LoggedInUser, DateTime.Now.ToString()))
                    {
                        XtraMessageBox.Show("Information has been successfully saved", "Success", MessageBoxButtons.OK, MessageBoxIcon.Information);
                    }
                }

            }
        }
    }
}